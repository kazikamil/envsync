Metadata-Version: 2.4
Name: envsync
Version: 0.1.0
Summary: A CLI tool to manage and synchronize .env files.
Home-page: https://github.com/yourusername/envsync
Author: Your Name
Author-email: Kamil Kazi <kazi.kamil13@gmail.com>
License: MIT License
        
        Copyright (c) 2025 [Kamil Kazi]
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: typer>=0.9.0
Dynamic: author
Dynamic: home-page
Dynamic: license-file
Dynamic: requires-python

# 🌍 envsync

A lightweight CLI tool to **manage and sync environment variables** across multiple projects and environments.  

Stop juggling `.env` files manually — switch, add, and sync your environment variables with a single command.

---

## 🚀 Features
- 🔄 **Switch** between environments instantly (`dev`, `staging`, `prod`, etc.)
- ➕ **Add** environment variables without opening editors
- 📂 **Sync** environment variables across projects or team members
- ✅ **Keep configs consistent** and portable

---

## 📦 Installation



### Local development
Clone the repo and install dependencies in editable mode:

```bash
git clone https://github.com/your-username/envsync.git
cd envsync
pip install -e .
```

---

## ⚡ Quick Start

Initialize `envsync` in your project:
```bash
envsync init
```

This will create a `.envsync/` folder to manage your environments.

---

## 🛠 Commands

### 🔄 Switch environments
```bash
envsync switch staging
```
Switches to `staging.env` instantly.

---

### ➕ Add a new variable
```bash
envsync add API_KEY=123456
```
Adds (or updates) `API_KEY` in the current environment.

---

### 📂 Sync environments
```bash
envsync sync
```
Syncs variables from `.env.local` to `.env`.



## 📚 Examples

Switch between environments:
```bash
envsync switch dev
envsync switch prod
```

Add new variables:
```bash
envsync add DATABASE_URL=postgres://user:pass@localhost:5432/db
envsync add DEBUG=True
```

Sync with another project:
```bash
envsync sync ../another-project/.env
```

---

## 📖 Project Structure
```
envsync/
│   __init__.py
│   main.py
.gitignore
LICENSE
README.md
pyproject.toml
setup.py
requirements.txt   # optional
examples/          # optional usage samples
```

---

## 🤝 Contributing

1. Fork the repo  
2. Create your feature branch (`git checkout -b feature/awesome-feature`)  
3. Commit changes (`git commit -m 'Add awesome feature'`)  
4. Push to the branch (`git push origin feature/awesome-feature`)  
5. Open a Pull Request 🎉  

---

## 📜 License
This project is licensed under the [MIT License](LICENSE).  
